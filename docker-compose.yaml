version: '1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3 
  producer:
    build: ./producer
    depends_on:
      - kafka
    volumes:
      - ./producer/data:/app/data

  timescaledb:
    build:
      context: ./database
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=stocksdb
    ports:
      - "5433:5432"
    volumes:
      - ./database:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 3

  python-db-helper:
    build:
      context: ./python-db-helper
    depends_on:
      timescaledb:
        condition: service_healthy
    environment:
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=password
      - DB_NAME=stocksdb
    volumes:
      - ./python-db-helper:/app
    command: ["python", "populate_stocks.py"]

  fastapi:
     build:
       context: ./timescale-fastapi
     depends_on:
       timescaledb:
         condition: service_healthy
     environment:
       - DB_HOST=timescaledb
       - DB_PORT=5432
       - DB_USER=postgres
       - DB_PASS=password
       - DB_NAME=stocksdb
     ports:
       - "8000:8000"
     volumes:
       - ./timescale-fastapi/src:/usr/app
     command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
